// Code generated by ent, DO NOT EDIT.

package show

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the show type in the database.
	Label = "show"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldAddedDate holds the string denoting the addeddate field in the database.
	FieldAddedDate = "added_date"
	// Table holds the table name of the show in the database.
	Table = "shows"
)

// Columns holds all SQL columns for show fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldOrder,
	FieldType,
	FieldAddedDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultAddedDate holds the default value on creation for the "addedDate" field.
	DefaultAddedDate func() time.Time
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeMovie Type = "movie"
	TypeTv    Type = "tv"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeMovie, TypeTv:
		return nil
	default:
		return fmt.Errorf("show: invalid enum value for type field: %q", _type)
	}
}

// OrderOption defines the ordering options for the Show queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByOrder orders the results by the order field.
func ByOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrder, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByAddedDate orders the results by the addedDate field.
func ByAddedDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAddedDate, opts...).ToFunc()
}
